setwd("/home/bzheng/project/04_rnaseq/chicken/05_result/")
library(dplyr)
data<-read.table('AllTissue_DESeq2_BW.txt',sep = '\t',header = T)
data$gene <- rownames(data)
library(dplyr)

data<- data %>%
  mutate(regulation = case_when(
    pvalue < 0.05 & log2FoldChange > 0 ~ "Up",
    pvalue < 0.05 & log2FoldChange < 0 ~ "Down",
    TRUE ~ "No"  # 默认情况
  ))

file_list <- list.files(path = "~/project/01_evolution/convergent_evolution/07_result/20250721_homo_genes/BW/", 
                        pattern = "\\.txt$", 
                        full.names = TRUE)

final_data <- data.frame(regulation = character(),
                         type = character(),
                         var = character(),
                         newX = character(),
                         count = numeric(),
                         stringsAsFactors = FALSE)


file_counter <- 1
format_newX <- function(counter) {
  sprintf("x%02d", counter)
}
file_info <- data.frame(
  file = file_list,
  var = NA_character_,
  type = NA_character_
)
for (i in seq_along(file_list)) {
  file <- file_list[i]
  if (grepl("4species_pos", file)) {
    file_info$var[i] <- "4SPs_PS"
  } else if (grepl("4species_neg", file)) {
    file_info$var[i] <- "4SPs_NS"
  } else if (grepl("5species_pos", file)) {
    file_info$var[i] <- "5SPs_PS"
  } else if (grepl("5species_neg", file)) {
    file_info$var[i] <- "5SPs_NS"
  }
  
  if (grepl("top5_50kb", file)) {
    file_info$type[i] <- "top5 50kb"
  } else if (grepl("top5_0kb", file)) {
    file_info$type[i] <- "top5 0kb"
  } else if (grepl("top1_0kb", file)) {
    file_info$type[i] <- "top1 0kb"
  } else if (grepl("top1_50kb", file)) {
    file_info$type[i] <- "top1 50kb"
  }
}
file_info <- file_info[order(file_info$var, file_info$type), ]
file_list <- file_info$file
type_counter <- 0
current_var <- ""
for (i in seq_along(file_list)) {
  file <- file_list[i]
  this_var <- file_info$var[i]
  type_val <- file_info$type[i]
  if (this_var == current_var) {
    type_counter <- type_counter + 1
  } else {
    type_counter <- 1
  }
  gene1 <- read.table(file, sep = '\t', header = TRUE)
  data2 <- data[data$gene %in% gene1$chicken,]
  var_val <- file_info$var[i]
  newX_val <- format_newX(file_counter)
  
  if (nrow(data2) > 0) {
    data2$type <- type_val
    data2$var <- var_val
    data2$newX <- newX_val
    data2 <- data2[, c(8, 9, 10, 11)]
    data2 <- data2 %>%
      group_by(regulation) %>%
      mutate(count = n()) %>%
      distinct() %>%
      ungroup()
  } else {
    data2 <- data.frame(
      regulation = NA_character_,
      type = type_val,
      var = var_val,
      newX = newX_val,
      count = NA_real_
    )
  }
  final_data <- rbind(final_data, data2)
  if (type_counter == 4) {
    na_row1 <- data.frame(
      regulation = NA_character_,
      type = NA_character_,
      var = NA_character_,
      newX = format_newX(file_counter + 1),
      count = NA_real_
    )
    na_row2 <- data.frame(
      regulation = NA_character_,
      type = NA_character_,
      var = NA_character_,
      newX = format_newX(file_counter + 2),
      count = NA_real_
    )
    final_data <- rbind(final_data, na_row1, na_row2)
    file_counter <- file_counter + 2
  }
  current_var <- this_var
  file_counter <- file_counter + 1
}

if (ncol(final_data) > 0) {
  final_data <- final_data[, c("regulation", "type", "var", "newX", "count")]
}

new_dat01 <- data.frame(x=0.5,xend=0.3,y=c(0,0.25,0.5,0.75,1),yend=c(0,0.25,0.5,0.75,1))
new_dat02 <- data.frame(x=0.3,y=c(0,0.25,0.5,0.75,1),lable=c(0,0.25,0.5,0.75,1)*100)
#label
final_data$id <- gsub('x','',final_data$newX)
label_data <- final_data %>% group_by(id,type) %>% summarize(tot=sum(count))
label_data$id <- as.numeric(label_data$id)
number_of_bar <- nrow(label_data)
angle <- 90 - 360 * (label_data$id-0.5) /number_of_bar
label_data$hjust <- ifelse( angle < -90, 1, 0) # 调整标签的对其方式
label_data$angle <- ifelse(angle < -90, angle+180, angle) ## 标签倾斜角度

#
final_data$id <- as.numeric(final_data$id)
base_data <- final_data %>% group_by(var) %>% 
  summarize(start=min(id)-0.5, end=max(id)+0.5) %>% 
  rowwise() %>% mutate(title=mean(c(start, end)))
base_data <- base_data[-5,]

p<-ggplot(final_data,aes(x=id,y=count,fill=regulation,label=count))+
  geom_bar(stat = 'identity',position = 'fill')+
  coord_polar()+
  scale_x_discrete(expand = expansion(add=0))+
  scale_y_continuous(limits = c(-1,NA))+
  theme(panel.background = element_blank(),
        legend.position = 'none',
        axis.text = element_blank(),
        axis.title = element_blank(),
        axis.ticks = element_blank())+
  scale_fill_manual(values = c("Up"="#dc0000b2","Down"="#91d1c2b2",'No'="grey80"))+
  geom_text(size=2,position = position_fill(vjust=0.5),color='white')+
  annotate(geom='segment',x=0.5,xend=0.5,y=0,yend=1)+
  geom_segment(data=new_dat01,aes(x=x,xend=xend,y=y,yend=yend),inherit.aes = FALSE)+
  geom_text(data=label_data,aes(x=id,y=1.1,label=type,hjust=hjust),color="black", fontface="bold", size=2.5, 
            angle= label_data$angle,inherit.aes = FALSE)+
  geom_text(data=new_dat02,aes(x=x,y=y,label=lable),inherit.aes = FALSE,hjust=1)+
  annotate(geom='text',x=25,y=0.5,label='DEGs(%)',angle=90,vjust=-2)+
  geom_segment(data=base_data, aes(x = start, y = -0.05, xend = end, yend = -0.05),colour = "black", alpha=0.8, size=0.6 , inherit.aes = FALSE )+
  #geom_text(data=base_data, aes(x = title, y = -0.2, label=var),colour = "black", alpha=0.8, size=3, fontface="bold", inherit.aes = FALSE)+  
  annotate(geom='text',x=2.5,y=-0.25,label='4SPs NS',angle=-30,fontface="bold")+
  annotate(geom='text',x=8.5,y=-0.25,label='4SPs PS',angle=60,fontface="bold")+
  annotate(geom='text',x=14.5,y=-0.25,label='5SPs NS',angle=-30,fontface="bold")+
  annotate(geom='text',x=20.5,y=-0.25,label='5SPs NS',angle=60,fontface="bold")
p
ggsave('BW_RNAseq_overlap_DEGs.pdf',p,dpi = 300,width = 6.5,height = 4.5)
library(ggsci)
library("scales")
mypal =pal_npg("nrc", alpha =0.7)(9)
mypal
show_col(mypal)
